import os
import glob
import argparse
import xml.etree.ElementTree as ET
from math import cos, sin, pi

# Usage: python xml_to_gt.py in_dir out_dir


def rotate_rect(xmin, ymin, xmax, ymax, theta):
    theta = theta * pi / 180

    w = xmax - xmin
    h = ymax - ymin

    yc = ymin + h/2
    xc = xmin + w/2

    xmax_rot = cos(theta) * (xmax-xc) - sin(theta) * (ymax-yc) + xc
    xmin_rot = cos(theta) * (xmin-xc) - sin(theta) * (ymin-yc) + xc
    ymax_rot = sin(theta) * (xmax-xc) + cos(theta) * (ymax-yc) + yc
    ymin_rot = sin(theta) * (xmin-xc) + cos(theta) * (ymin-yc) + yc

    return int(xmin_rot), int(ymin_rot), int(xmax_rot), int(ymax_rot)


def pts_to_box(xmin, ymin, xmax, ymax):
    """In the form [x0, y0, x1, y1, x2, y2, x3, y3]"""

    x0, y0 = int(xmin), int(ymax)
    x1, y1 = int(xmax), int(ymax)
    x2, y2 = int(xmax), int(ymin)
    x3, y3 = int(xmin), int(ymin)

    return [x0, y0, x1, y1, x2, y2, x3, y3]


def xml_to_txt(xml_dir, output_dir, rotation=0):

    for xml_file in glob.glob(os.path.join(xml_dir, '*.xml')):
        tree = ET.parse(xml_file)
        root = tree.getroot()
        filename = root.find('filename').text
        filename = filename.replace(".jpg", "")
        filename = 'gt_' + filename + '.txt'
        try:
            width = int(root.find('size')[0].text)
            height = int(root.find('size')[1].text)
        except:
            pass
        text = "###"
        lines = []
        for member in root.findall('object'):
            cls = member[0].text  # Unused
            xmin = int(member[4][0].text)
            ymin = int(member[4][1].text)
            xmax = int(member[4][2].text)
            ymax = int(member[4][3].text)
            xmin, ymin, xmax, y_max = rotate_rect(xmin, ymin, xmax, ymax, rotation)
            pts = pts_to_box(xmin, ymin, xmax, ymax)
            line = ""
            for pt in pts:
                line += str(pt) + ","
            line += text
            lines.append(line)

        for i in range(len(lines) - 1):
            lines[i] += "\n"

        with open(os.path.join(output_dir, filename), 'w') as outfile:
            outfile.writelines(lines)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description = 'Reads all XML files, generated by labelImg, from a directory and generates IDCAR compliant gt_*.txt files',
        formatter_class=argparse.RawDescriptionHelpFormatter
    )

    parser.add_argument(
        'input',
        metavar='input',
        type=str,
        help=
        'Directory containing the XML files generated by labelImg'
    )
    parser.add_argument('output',
                        metavar='output',
                        type=str,
                        help='Path where the output folder is.')

    args = parser.parse_args()

    xml_to_txt(args.input, args.output)
